{"version":3,"file":"static/js/779.771a3e6b.chunk.js","mappings":"+QAEaA,EAAUC,EAAAA,GAAAA,EAAH,4CAIPC,EAAOD,EAAAA,GAAAA,GAAH,qEAIJE,EAAOF,EAAAA,GAAAA,GAAH,8EAKJG,EAAQH,EAAAA,GAAAA,GAAH,qFAKLI,EAAOJ,EAAAA,GAAAA,EAAH,4C,6BCoCjB,EA9CgB,WACd,OAAkCK,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAIQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIL,GAAa,GAFjB,SAG8BM,EAAAA,GAAoBH,EARvC,GAKX,OAGUI,EAHV,OAKIL,EAAWK,GALf,gDAQIC,QAAQC,IAAR,MARJ,yBAUIT,GAAa,GAVjB,6EADc,uBAAC,WAAD,wBAcdU,KACC,CAACP,KAGF,gCACGJ,IAAa,SAACY,EAAA,EAAD,IAEbV,GAAmC,IAAxBA,EAAQW,cAClB,SAACpB,EAAD,wDAEDS,GACCA,EAAQY,QAAQC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,SAACtB,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,sBAAgBmB,MAChB,SAAClB,EAAD,UAAOmB,MAFEb,a,0MC5CjBc,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,uCAA0CD,IADlC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,EAAOC,GAAd,uFACVN,IAAAA,IAAA,gCACSD,EADT,iCACyCM,EADzC,iBACuDC,EADvD,yBADU,cACtBC,EADsB,yBAIrBA,EAAIJ,MAJiB,2CAAH,wDAOdK,EAAe,mCAAG,WAAMvB,GAAN,uFACXe,IAAAA,IAAA,iBAAoBf,EAApB,oBAAkCc,EAAlC,oBADW,cACvBQ,EADuB,yBAEtBA,EAAIJ,MAFkB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMxB,GAAN,uFACRe,IAAAA,IAAA,iBACNf,EADM,4BACgBc,EADhB,oBADQ,cACpBQ,EADoB,yBAInBA,EAAIJ,MAJe,2CAAH,sDAOZO,EAAe,mCAAG,WAAOzB,EAAIqB,GAAX,uFACXN,IAAAA,IAAA,iBACNf,EADM,4BACgBc,EADhB,gCAC+CO,IAFpC,cACvBC,EADuB,yBAItBA,EAAIJ,MAJkB,2CAAH","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: 16px;\n`;\n\nexport const List = styled.ul`\n  padding-left: 18px;\n  margin: 13px auto;\n`;\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n`;\nexport const Title = styled.h3`\n  font-size: 14px;\n  line-height: 1.18;\n  margin: 11px 0;\n`;\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport { Item, List, Message, Title, Text } from './Reviews.styled';\n\nimport * as API from 'service/Api';\n\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState(null);\n  // ?  const { results, total_pages } = reviews;\n  const page = 1;\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        setIsLoading(true);\n        const reviewsData = await API.getMovieReviews(id, page);\n\n        setReviews(reviewsData);\n      } catch (error) {\n        // setError(true);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieReviews();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n\n      {reviews && reviews.total_pages === 0 && (\n        <Message>We don't have any reviews for this movie.</Message>\n      )}\n      {reviews &&\n        reviews.results.map(({ id, author, content }) => (\n          <List>\n            <Item key={id}>\n              <Title>Author: {author}</Title>\n              <Text>{content}</Text>\n            </Item>\n          </List>\n        ))}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '32154ccfbac7bd65481a7123aa380b2c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQueryMovies = async (query, page) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async (id, page) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return res.data;\n};\n"],"names":["Message","styled","List","Item","Title","Text","useState","isLoading","setIsLoading","reviews","setReviews","id","useParams","useEffect","API","reviewsData","console","log","fetchMovieReviews","Loader","total_pages","results","map","author","content","API_KEY","axios","getTrendingMovies","response","data","getQueryMovies","query","page","res","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}