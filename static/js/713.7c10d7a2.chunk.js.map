{"version":3,"file":"static/js/713.7c10d7a2.chunk.js","mappings":"sLAEaA,E,QAAqBC,GAAAA,GAAH,mE,SCU/B,EARqB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,SAACF,EAAD,UAAqBE,M,mGCHjBC,EAAWF,EAAAA,GAAAA,IAAH,8CAIRG,EAAQH,EAAAA,GAAAA,GAAH,2G,mECFLI,EAAOJ,EAAAA,GAAAA,GAAH,mEAIJK,EAAOL,EAAAA,GAAAA,GAAH,6EAMJM,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,6G,uCCuCvB,EA1CqB,WACnB,OAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4CJ,EAAAA,EAAAA,UAAS,IAArD,eAAOK,EAAP,KAAuBC,EAAvB,KAGMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIP,GAAa,GAFjB,SAGqCQ,EAAAA,KAHrC,OAGUC,EAHV,OAKIL,EAAkBK,EAAmBC,SALzC,gDAOIR,GAAS,GAPb,yBASIF,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadW,KACC,KAGD,UAACjB,EAAD,WACGK,IAAa,SAACa,EAAA,EAAD,IACbX,GACC,SAACY,EAAA,EAAD,CAActB,QAAQ,gDAEtBY,EAAeW,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACjB,SAACrB,EAAD,WACE,SAACC,EAAD,CAAYqB,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMd,GAAhD,SACGU,KAFMC,UC7BrB,EATa,WACX,OACE,UAACxB,EAAD,YACE,SAACC,EAAD,8BACA,SAAC,EAAD,S,0MCNA2B,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,uCAA0CD,IADlC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,EAAOC,GAAd,uFACVN,IAAAA,IAAA,gCACSD,EADT,iCACyCM,EADzC,iBACuDC,EADvD,yBADU,cACtBC,EADsB,yBAIrBA,EAAIJ,MAJiB,2CAAH,wDAOdK,EAAe,mCAAG,WAAMb,GAAN,uFACXK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCI,EAAlC,oBADW,cACvBQ,EADuB,yBAEtBA,EAAIJ,MAFkB,2CAAH,sDAKfM,EAAY,mCAAG,WAAMd,GAAN,uFACRK,IAAAA,IAAA,iBACNL,EADM,4BACgBI,EADhB,oBADQ,cACpBQ,EADoB,yBAInBA,EAAIJ,MAJe,2CAAH,sDAOZO,EAAe,mCAAG,WAAOf,EAAIW,GAAX,uFACXN,IAAAA,IAAA,iBACNL,EADM,4BACgBI,EADhB,gCAC+CO,IAFpC,cACvBC,EADuB,yBAItBA,EAAIJ,MAJkB,2CAAH","sources":["components/Notification/Notification.styled.js","components/Notification/Notification.jsx","pages/Home/Home.styled.js","components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","pages/Home/Home.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledNotification = styled.h2`\n  padding: 88px 0;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledNotification } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <StyledNotification>{message}</StyledNotification>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const HomePage = styled.div`\n  padding-top: 68px;\n`;\n\nexport const Title = styled.h1`\n  padding: 22px 0;\n  font-size: 30px;\n  line-height: 1.37;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding-left: 18px;\n  margin-top: 3px;\n`;\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-bottom: 7px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: #2196f3;\n  font-weight: 500;\n  :hover,\n  :focus {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, LinkStyled, List } from './TrendingList.styled';\n\nimport * as API from 'service/Api';\n\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\n\nconst TrendingList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  // ? const { results, page, total_pages } = trendingMovies;\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchTrendingMovies() {\n      try {\n        setIsLoading(true);\n        const trendingMoviesData = await API.getTrendingMovies();\n\n        setTrendingMovies(trendingMoviesData.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {error ? (\n        <Notification message=\"Oop! Something went wrong! Try again later!\" />\n      ) : (\n        trendingMovies.map(({ title, id }) => (\n          <Item key={id}>\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </LinkStyled>\n          </Item>\n        ))\n      )}\n    </List>\n  );\n};\n\nexport default TrendingList;\n","import { HomePage, Title } from './Home.styled';\n\nimport TrendingList from 'components/TrendingList/TrendingList';\n\nconst Home = () => {\n  return (\n    <HomePage>\n      <Title>Trending today</Title>\n      <TrendingList />\n    </HomePage>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '32154ccfbac7bd65481a7123aa380b2c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQueryMovies = async (query, page) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async (id, page) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return res.data;\n};\n"],"names":["StyledNotification","styled","message","HomePage","Title","List","Item","LinkStyled","Link","useState","isLoading","setIsLoading","error","setError","trendingMovies","setTrendingMovies","location","useLocation","useEffect","API","trendingMoviesData","results","fetchTrendingMovies","Loader","Notification","map","title","id","to","state","from","API_KEY","axios","getTrendingMovies","response","data","getQueryMovies","query","page","res","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}