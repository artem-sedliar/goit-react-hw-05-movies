{"version":3,"file":"static/js/978.edd79530.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding-top: 82px;\n`;\nexport const Btn = styled.button`\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 11px;\n  border-radius: 5px;\n  padding: 5px 13px;\n  border: 1px solid #d1cccc;\n  background-color: #fff;\n  :hover,\n  :focus {\n    color: red;\n    box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n      1px 4px 6px rgb(0 0 0 / 16%);\n  }\n`;\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 18px;\n  margin-top: 11px;\n  padding-bottom: 11px;\n  border-bottom: 1px solid #94959b;\n  margin-bottom: 22px;\n`;\nexport const Img = styled.img`\n  width: 292px;\n  border-radius: 5px;\n`;\nexport const Description = styled.div`\n  padding: 22px 0;\n`;\nexport const MovieTitle = styled.h2`\n  font-size: 33px;\n  line-height: 1.33;\n  margin-bottom: 13px;\n`;\nexport const Title = styled.h3`\n  font-size: 21px;\n  line-height: 1.21;\n  margin: 11px 0;\n`;\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n\nexport const Add = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\nexport const List = styled.ul`\n  display: flex;\n  padding-left: 18px;\n  margin: 13px auto;\n`;\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-right: 22px;\n  }\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  color: #2196f3;\n  font-weight: 500;\n  :hover,\n  :focus {\n    color: red;\n  }\n  .active {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\n\nimport { useParams, useNavigate, useLocation, Outlet } from 'react-router-dom';\n\nimport { MdOutlineKeyboardBackspace } from 'react-icons/md';\n\nimport {\n  Wrapper,\n  Card,\n  Description,\n  MovieTitle,\n  Text,\n  Title,\n  List,\n  Item,\n  Add,\n  Img,\n  LinkStyled,\n  Btn,\n} from './MovieCard.styled';\n\nimport * as API from 'service/Api';\n\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\n\nconst MovieCard = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const navigate = useNavigate();\n\n  const { id } = useParams();\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n  const defaultPoster =\n    'https://www.pngkey.com/png/detail/483-4837105_clipart-free-stock-movie-projector-clipart-movie-projector.png';\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        setIsLoading(true);\n        const movieData = await API.getMovieDetails(id);\n\n        setSelectedMovie(movieData);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieDetails();\n  }, [id]);\n\n  return (\n    <Wrapper>\n      {isLoading && <Loader />}\n      <Btn type=\"button\" onClick={() => navigate(backLinkHref)}>\n        <MdOutlineKeyboardBackspace size=\"18px\" />\n        Go back\n      </Btn>\n\n      {error ? (\n        <Notification message=\"Oop! Something went wrong! Try again later!\" />\n      ) : (\n        selectedMovie && (\n          <Card>\n            <Img\n                            src={\n                selectedMovie.poster_path\n                  ? `${baseImgUrl}${selectedMovie.poster_path}`\n                  : `${defaultPoster}`\n              }\n              alt=\"movie poster\"\n            />\n            <Description>\n              <MovieTitle>{selectedMovie.title}</MovieTitle>\n              <Text>\n                User score: {Math.round(selectedMovie.vote_average * 10)}%\n              </Text>\n              <Title>Overview</Title>\n              <Text> {selectedMovie.overview} </Text>\n              <Title>Genres</Title>\n              <Text>\n                {selectedMovie.genres.map(item => item.name).join(' ')}\n              </Text>\n            </Description>\n          </Card>\n        )\n      )}\n\n      <Add>Additional information</Add>\n      <List>\n        <Item>\n          <LinkStyled\n                        to={`/movies/${id}/cast`}\n            state={{ from: backLinkHref }}\n          >\n            Cast\n          </LinkStyled>\n        </Item>\n        <Item>\n          <LinkStyled\n                        to={`/movies/${id}/reviews`}\n            state={{ from: backLinkHref }}\n          >\n            Reviews\n          </LinkStyled>\n        </Item>\n      </List>\n      <Outlet />\n    </Wrapper>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const StyledNotification = styled.h2`\n  padding: 88px 0;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledNotification } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <StyledNotification>{message}</StyledNotification>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst API_KEY = '32154ccfbac7bd65481a7123aa380b2c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQueryMovies = async (query, page) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async (id, page) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return res.data;\n};\n"],"names":["Wrapper","styled","Btn","Card","Img","Description","MovieTitle","Title","Text","Add","List","Item","LinkStyled","NavLink","useState","isLoading","setIsLoading","error","setError","selectedMovie","setSelectedMovie","backLinkHref","useLocation","state","from","navigate","useNavigate","id","useParams","useEffect","API","movieData","fetchMovieDetails","Loader","type","onClick","size","Notification","message","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","item","name","join","to","StyledNotification","API_KEY","axios","getTrendingMovies","response","data","getQueryMovies","query","page","res","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}