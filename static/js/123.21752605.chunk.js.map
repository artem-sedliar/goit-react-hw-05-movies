{"version":3,"file":"static/js/123.21752605.chunk.js","mappings":"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","sources":["components/Notification/Notification.styled.js","components/Notification/Notification.jsx","pages/Movies/Movies.styled.js","components/SearchingList/SearchingList.styled.js","components/SearchingList/SearchingList.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledNotification = styled.h2`\n  padding: 88px 0;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledNotification } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <StyledNotification>{message}</StyledNotification>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from 'styled-components';\n\nexport const MoviesPage = styled.div`\n  padding-top: 68px;\n`;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding-left: 18px;\n  margin-top: 3px;\n  margin-bottom: 13px;\n`;\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-bottom: 7px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: #2196f3;\n  font-weight: 500;\n  :hover,\n  :focus {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\n\nimport { Item, LinkStyled, List } from './SearchingList.styled';\n\nconst SearchingList = ({ searchingMovies }) => {\n  const { results } = searchingMovies;\n  // ? page, total_pages\n\n  const location = useLocation();\n\n  return (\n    <List>\n      {results.map(({ title, id }) => (\n        <Item key={id}>\n          <LinkStyled to={`${id}`} state={{ from: location }}>\n            {title}\n          </LinkStyled>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nSearchingList.propTypes = {\n  searchingMovies: PropTypes.object.isRequired,\n};\n\nexport default SearchingList;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  font-size: 14px;\n  height: 33px;\n  border-radius: 5px;\n  padding: 3px 13px;\n  border: 1px solid #d1cccc;\n  background-color: #fff;\n  &:hover,\n  &:focus {\n    color: red;\n    box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n      1px 4px 6px rgb(0 0 0 / 16%);\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './Button.styled';\n\nconst Button = ({ title }) => {\n  return <Btn>{title}</Btn>;\n};\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  max-width: 333px;\n  margin: 22px 0;\n`;\n\nexport const Input = styled.input`\n  font-size: 14px;\n  width: 222px;\n  height: 33px;\n  padding: 7px 0;\n  padding-left: 13px;\n  margin-right: 13px;\n  border: 1px solid #94959b;\n  border-radius: 3px;\n\n  :focus {\n    border: 1px solid #2196f3;\n    outline: none;\n    box-shadow: 0px 0px 10px rgb(111 111 111 / 55%);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport Button from 'components/Button/Button';\n\nimport { Form, Input } from './SearchForm.styled';\n\nimport { Notify } from 'notiflix';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [input, setInput] = useState('');\n\n  const handleChange = evt => {\n    setInput(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (input.trim() === '') {\n      Notify.warning('Please enter a title');\n      return;\n    }\n\n    onSubmit(input);\n    setInput('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"title\"\n        value={input}\n        onChange={handleChange}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies...\"\n      />\n      <Button title=\"Search\" type=\"submit\" />\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { MoviesPage } from './Movies.styled';\n\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport * as API from 'service/Api';\n\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport SearchingList from 'components/SearchingList/SearchingList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [searchingMovies, setSearchingMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const page = 1;\n  const message = `${query} not found!`;\n\n  useEffect(() => {\n    if (query !== '') {\n      async function fetchSearchingMovies() {\n        try {\n          setIsLoading(true);\n          const searchingMoviesData = await API.getQueryMovies(query, page);\n\n          setSearchingMovies(searchingMoviesData);\n        } catch (error) {\n          setError(true);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n      fetchSearchingMovies();\n    }\n  }, [query]);\n\n  const movieTitle = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <MoviesPage>\n      <SearchForm onSubmit={movieTitle} />\n\n      {isLoading && <Loader />}\n      {!isLoading &&\n        !error &&\n        searchingMovies.length !== 0 &&\n        searchingMovies.results.length === 0 && (\n          <Notification message={message} />\n        )}\n\n      {error ? (\n        <Notification message=\"Oop! Something went wrong! Try again later!\" />\n      ) : (\n        searchingMovies.length !== 0 && (\n          <SearchingList searchingMovies={searchingMovies} />\n        )\n      )}\n    </MoviesPage>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '32154ccfbac7bd65481a7123aa380b2c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQueryMovies = async (query, page) => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return res.data;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async (id, page) => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return res.data;\n};\n"],"names":["StyledNotification","styled","message","MoviesPage","List","Item","LinkStyled","Link","results","searchingMovies","location","useLocation","map","title","id","to","state","from","Btn","Form","Input","onSubmit","useState","input","setInput","evt","preventDefault","trim","Notify","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","isLoading","setIsLoading","error","setError","setSearchingMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchSearchingMovies","API","searchingMoviesData","Loader","length","Notification","API_KEY","axios","getTrendingMovies","response","data","getQueryMovies","page","res","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}